{"version":3,"sources":["components/ChevronIcon.tsx","components/AngleAccordion.tsx","components/TextInput.tsx","components/AnimatePanel.tsx","components/constants.tsx","components/ValueSlider.tsx","components/ModelControls.tsx","components/ModelGeneratorFunctions.ts","components/ThreeContainer.tsx","App.tsx","index.tsx"],"names":["ChevronIcon","props","aria-hidden","focusable","data-prefix","height","width","className","data-icon","role","xmlns","viewBox","fill","d","stopPropagation","event","AngleAccordion","React","memo","useState","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","setSelected","setSelectedState","content","useRef","useEffect","onSelect","onClick","selectItem","index","deSelectItem","preventDefault","current","scrollHeight","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","children","header","ref","style","maxHeight","body","handleKeyDown","key","currentTarget","blur","onBlur","value","text","n","Math","floor","Number","Infinity","String","isNormalInteger","alert","window","scrollTo","numValue","parseInt","min","max","updateRobotValue","valueIndex","TextInput","robotValue","label","type","onChange","target","onKeyDown","AnimatePanel","resetPosition","onAddItem","setState","RobotValues","state","values","list","selectedPositions","push","splice","setSelectState","select","cancelSelect","onDeleteItems","robotValuesCopy","sort","a","b","forEach","loadCurrentPosition","length","position","receiveRobotValues","robotValueCopy","startAnimation","stopAnimation","renderAccordion","padding","map","item","toString","this","animate","Button","size","aria-label","variant","disabled","PureComponent","defSpriteParams","fontsize","fontface","backgroundColor","xParams","textColor","borderColor","yParams","zParams","ControlConfig","defaultVal","valUnit","handleSliderChange","setValue","changeDir","setChangeDir","ypos","parseFloat","endEffectorYcor","toFixed","newValue","intersecting","effectorIntersect","updateValue","ValueSlider","step","ModelControls","containerRef","longPressTimeout","onMobile","resizeControls","isPortrait","matchMedia","matches","pos","portraitPos","landscapePos","offsetWidth","offsetLeft","xDelta","innerWidth","x","y","button","top","offsetTop","left","newPosition","pageX","pageY","cursor","dragging","rel","onMouseMove","innerHeight","offsetHeight","newX","newY","onMouseLeave","touches","setTimeout","overflow","onTouchMove","clearTimeout","onControlsButton","showControls","onAxesButton","axes","showAxes","displayAxis","onClickLabel","showLabels","displayLabel","robotValues","animation","pressShowControls","console","log","updateArmConfig","config","slice","updateConfig","renderSlider","getEndEffectorYcor","createRef","test","navigator","userAgent","addEventListener","removeEventListener","unselectable","minWidth","undefined","display","id","Component","createCylinder","radius","THREE","createBox","depth","makeTextSprite","message","params","z","borderThickness","canvas","document","createElement","context","getContext","font","textWidth","measureText","fillStyle","strokeStyle","lineWidth","ctx","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","roundRect","fillText","texture","minFilter","needsUpdate","spriteMaterial","premultipliedAlpha","dithering","transparent","precision","depthWrite","sprite","scale","set","center","transparentMat","color","opacity","yMat","blackMat","ThreeContainer","threeRootElement","canvasRef","canvasCtx","plane","frameId","light","prevState","showAxis","positionSeq","rotateFuncs","handles","scene","camera","renderer","antialias","joint","jointAxisStart","jointAxisEnd","origins","gripper","gripperPositions","endEffector","robotBase","labels","axis","boundingBox1","boundingBox2","lines","controls","OrbitControls","domElement","worldPos","crtIndex","nextIndex","angleDelta","frameCount","drawCoordinates","createBoundingBoxes","geometry","computeBoundingBox","setFromObject","endEffectorIntersect","containsPoint","endEffectorCoordinates","onSizeChange","clientWidth","clientHeight","setSize","aspect","updateProjectionMatrix","sendRobotValues","rotateJoint1","newAngle","prevAngle","angle","rad","rotateY","rotateJoint2","clone","sub","point","rotate","rotateJoint3","rotateJoint4","updateGripper","prevValue","leftDelta","rightDelta","copy","multiplyScalar","add","PI","obj","theta","normalAxis","normalize","applyAxisAngle","rotateOnAxis","updateAxesVisibility","visible","i","displayLabelVisibility","line","start","requestAnimationFrame","renderTHREE","stop","cancelAnimationFrame","getWorldPosition","drawEffectCoordinates","renderCoordinates","updateView","update","render","drawPositions","positions","clearRect","setPixelRatio","devicePixelRatio","object","appendChild","setClearColor","base","baseCylinder","cylinder","baseBox","joint2Base","jointCylinder","rotateX","constructJoint1","joint2Bar","constructJoint2","armBody","armBodyCover","constructJoint3","constructJoint4","points","setFromPoints","createLabels","gridhelper","lookAt","createDisplay","nextProps","nextState","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc8eaf79.chunk.js","sourcesContent":["import React from 'react';\ninterface Props {\n  className: string;\n  height: number;\n  width: number;\n  fill: string;\n}\nexport const ChevronIcon = (props: Props) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      height={props.height}\n      width={props.width}\n      className={props.className}\n      data-icon=\"chevron-right\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 320 512\"\n    >\n      <path\n        fill={props.fill}\n        d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n      ></path>\n    </svg>\n  );\n};\n","import React, { FunctionComponent, ReactNode, useRef, useState } from 'react';\nimport { ChevronIcon } from './ChevronIcon';\nimport './styles/AngleAccordion.scss';\n\ninterface AccordionProps {\n  children: {\n    header: ReactNode;\n    body: ReactNode;\n  };\n  selectItem(index: number): void;\n  deSelectItem(index: number): void;\n  onSelect: boolean;\n  index: number;\n}\n\nconst stopPropagation = (\n  event:\n    | React.MouseEvent<HTMLButtonElement, MouseEvent>\n    | React.TouchEvent<HTMLButtonElement>,\n) => {\n  event.stopPropagation();\n};\n\nexport const AngleAccordion: FunctionComponent<AccordionProps> = React.memo(\n  (props: AccordionProps) => {\n    const [setActive, setActiveState] = useState('');\n    const [setHeight, setHeightState] = useState('0px');\n    const [setRotate, setRotateState] = useState('accordion__icon');\n    const [setSelected, setSelectedState] = useState('');\n    const content = useRef<HTMLDivElement>(null);\n\n    const toggleAccordion = () => {\n      setActiveState(setActive === '' ? 'active' : '');\n      setHeightState(\n        setActive === 'active' ? '0px' : `${content.current?.scrollHeight}px`,\n      );\n      setRotateState(\n        setActive === 'active' ? 'accordion__icon' : 'accordion__icon rotate',\n      );\n    };\n    const selectItem = (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    ) => {\n      setHeightState('0px');\n\n      if (setSelected !== 'selected-item') {\n        props.selectItem(props.index);\n        setSelectedState('selected-item');\n      } else {\n        props.deSelectItem(props.index);\n        setSelectedState('');\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    React.useEffect(() => {\n      if (!props.onSelect) {\n        setActiveState('');\n        setSelectedState('');\n        setRotateState('accordion__icon');\n        setHeightState('0px');\n      }\n    }, [props.onSelect]);\n\n    return (\n      <div className=\"accordion__section\">\n        <button\n          className={\n            props.onSelect\n              ? `accordion ${setSelected}`\n              : `accordion ${setActive}`\n          }\n          onClick={props.onSelect ? selectItem : toggleAccordion}\n          onTouchStart={stopPropagation}\n          onTouchEnd={stopPropagation}\n          onMouseDown={stopPropagation}\n          onMouseUp={stopPropagation}\n        >\n          {props.children.header}\n          <ChevronIcon\n            className={props.onSelect ? 'accordion__icon' : `${setRotate}`}\n            width={20}\n            height={20}\n            fill={'#777'}\n          />\n        </button>\n        <div\n          ref={content}\n          className=\"accordion__content\"\n          style={{ maxHeight: props.onSelect ? '0px' : setHeight }}\n        >\n          <div className=\"accordion__text\">{props.children.body}</div>\n        </div>\n      </div>\n    );\n  },\n);\n","import React, { memo, useState } from 'react';\nimport './styles/TextInput.scss';\ninterface TextInputProps {\n  label: string;\n  index: number;\n  valueIndex: number;\n  value: string;\n  min: number;\n  max: number;\n  updateRobotValue(index: number, valueIndex: number, value: number): void;\n}\nconst stopPropagation = (\n  event:\n    | React.MouseEvent<HTMLFormElement, MouseEvent>\n    | React.TouchEvent<HTMLFormElement>\n    | React.TouchEvent<HTMLInputElement>\n    | React.MouseEvent<HTMLInputElement, MouseEvent>,\n) => {\n  event.stopPropagation();\n};\nconst isNormalInteger = (text: string) => {\n  const n = Math.floor(Number(text));\n  return n !== Infinity && String(n) === text;\n};\nconst handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  if (event.key === 'Enter') event.currentTarget.blur();\n};\nconst onBlur = (props: TextInputProps, value: string) => (\n  event: React.FocusEvent<HTMLInputElement>,\n) => {\n  event.stopPropagation();\n  event.preventDefault();\n  if (!isNormalInteger(value)) {\n    alert('The value must be numeric.');\n    event.currentTarget.value = props.value;\n    window.scrollTo(0, 0);\n    return;\n  }\n  const numValue = parseInt(value);\n  if (numValue >= props.min && numValue <= props.max)\n    props.updateRobotValue(props.index, props.valueIndex, numValue);\n  else {\n    alert(\n      `The value must be within the boundaries. \\nMin: ${props.min}    Max: ${props.max}`,\n    );\n    event.currentTarget.value = props.value;\n  }\n  window.scrollTo(0, 0);\n};\nexport const TextInput = memo((props: TextInputProps) => {\n  const [robotValue, updateRobotValue] = useState('0');\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateRobotValue(event.target.value);\n    event.stopPropagation();\n  };\n\n  React.useEffect(() => {\n    updateRobotValue(props.value);\n  }, [props.value]);\n  return (\n    <form\n      onMouseUp={stopPropagation}\n      onTouchEnd={stopPropagation}\n      onMouseDown={stopPropagation}\n      onTouchStart={stopPropagation}\n    >\n      <div className=\"label\">\n        <p>{props.label}</p>\n      </div>\n      <div className=\"input\">\n        <input\n          type=\"number\"\n          onChange={onChange}\n          value={robotValue}\n          max={props.max}\n          min={props.min}\n          onBlur={onBlur(props, robotValue)}\n          onKeyDown={handleKeyDown}\n          onMouseUp={stopPropagation}\n          onTouchEnd={stopPropagation}\n          onMouseDown={stopPropagation}\n          onTouchStart={stopPropagation}\n        ></input>\n      </div>\n    </form>\n  );\n});\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { AngleAccordion } from './AngleAccordion';\nimport './styles/AnimatePanel.scss';\nimport { TextInput } from './TextInput';\n\nexport interface RobotValue {\n  values: number[];\n}\ninterface Props {\n  resetPosition(): void;\n  receiveRobotValues(): number[];\n  startAnimation(robotValues: RobotValue[]): void;\n  stopAnimation(): void;\n  animate: boolean;\n}\ninterface State {\n  RobotValues: RobotValue[];\n  selectedPositions: number[];\n  select: boolean;\n}\nexport type RobotValueKey =\n  | 'joint1'\n  | 'joint2'\n  | 'joint3'\n  | 'joint4'\n  | 'gripper';\nclass AnimatePanel extends React.PureComponent<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      select: false,\n      selectedPositions: [],\n      RobotValues: [{ values: [0, 0, 0, 0, 0] }],\n    };\n  }\n  resetPosition = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.currentTarget.blur();\n    this.props.resetPosition();\n    event.stopPropagation();\n  };\n  stopPropagation = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>\n      | React.MouseEvent<HTMLDivElement, MouseEvent>\n      | React.TouchEvent<HTMLDivElement>,\n  ) => {\n    event.stopPropagation();\n  };\n  onAddItem = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.currentTarget.blur();\n    this.setState({\n      RobotValues: [...this.state.RobotValues, { values: [0, 0, 0, 0, 0] }],\n    });\n    event.stopPropagation();\n  };\n  selectItem = (index: number) => {\n    const list = this.state.selectedPositions;\n    list.push(index);\n    this.setState({ selectedPositions: list });\n  };\n  deSelectItem = (index: number) => {\n    const list = this.state.selectedPositions;\n    list.splice(index, 1);\n    this.setState({ selectedPositions: list });\n  };\n  setSelectState = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.currentTarget.blur();\n    this.setState({ select: true });\n    event.stopPropagation();\n  };\n  cancelSelect = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.currentTarget.blur();\n    this.setState({ select: false });\n    event.stopPropagation();\n  };\n  onDeleteItems = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.currentTarget.blur();\n\n    const robotValuesCopy = [...this.state.RobotValues];\n    const selectedPositions = [...this.state.selectedPositions];\n    selectedPositions.sort((a, b) => b - a);\n    selectedPositions.forEach((index) => {\n      robotValuesCopy.splice(index, 1);\n    });\n\n    this.setState({\n      RobotValues: robotValuesCopy,\n      select: false,\n      selectedPositions: [],\n    });\n    event.stopPropagation();\n  };\n  loadCurrentPosition = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.currentTarget.blur();\n    event.stopPropagation();\n    const { length } = this.state.RobotValues;\n    if (length === 0) return;\n    const position = this.props.receiveRobotValues();\n    const index = this.state.RobotValues.length - 1;\n    const robotValueCopy = [...this.state.RobotValues];\n    robotValueCopy[index] = {\n      values: position,\n    };\n    this.setState({ RobotValues: robotValueCopy });\n  };\n  startAnimation = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    this.props.startAnimation(this.state.RobotValues);\n    event.currentTarget.blur();\n    event.stopPropagation();\n  };\n  stopAnimation = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    this.props.stopAnimation();\n    event.currentTarget.blur();\n    event.stopPropagation();\n  };\n  updateRobotValue = (index: number, valueIndex: number, value: number) => {\n    const robotValuesCopy = [...this.state.RobotValues];\n    robotValuesCopy[index].values[valueIndex] = value;\n    this.setState({ RobotValues: robotValuesCopy });\n  };\n  renderAccordion = () => {\n    return (\n      <div\n        style={{ padding: 10 }}\n        onMouseUp={this.stopPropagation}\n        onTouchEnd={this.stopPropagation}\n        onMouseDown={this.stopPropagation}\n        onTouchStart={this.stopPropagation}\n      >\n        {this.state.RobotValues.map((item, index) => {\n          return (\n            <AngleAccordion\n              key={index + 'g'}\n              index={index}\n              selectItem={this.selectItem}\n              deSelectItem={this.deSelectItem}\n              onSelect={this.state.select}\n            >\n              {{\n                header: <div>{`Position ${index + 1}`}</div>,\n                body: (\n                  <div>\n                    <TextInput\n                      value={item.values[0].toString()}\n                      label={'Joint 1'}\n                      index={index}\n                      valueIndex={0}\n                      updateRobotValue={this.updateRobotValue}\n                      min={-135}\n                      max={135}\n                    />\n                    <TextInput\n                      value={item.values[1].toString()}\n                      label={'Joint 2'}\n                      index={index}\n                      valueIndex={1}\n                      updateRobotValue={this.updateRobotValue}\n                      min={-85}\n                      max={85}\n                    />\n                    <TextInput\n                      value={item.values[2].toString()}\n                      label={'Joint 3'}\n                      index={index}\n                      valueIndex={2}\n                      updateRobotValue={this.updateRobotValue}\n                      min={-135}\n                      max={135}\n                    />\n                    <TextInput\n                      value={item.values[3].toString()}\n                      label={'Joint 4'}\n                      index={index}\n                      valueIndex={3}\n                      updateRobotValue={this.updateRobotValue}\n                      min={-60}\n                      max={60}\n                    />\n                    <TextInput\n                      value={item.values[4].toString()}\n                      label={'Gripper'}\n                      index={index}\n                      valueIndex={4}\n                      updateRobotValue={this.updateRobotValue}\n                      min={0}\n                      max={100}\n                    />\n                  </div>\n                ),\n              }}\n            </AngleAccordion>\n          );\n        })}\n      </div>\n    );\n  };\n  render() {\n    const { select } = this.state;\n    const { animate } = this.props;\n    return (\n      <div>\n        <div className=\"positions-container\">\n          <h4>Set Arm Movement</h4>\n          <p>\n            Use the controls below to set a sequence of angle positions. Use the\n            animate button to show the robot arm motion.\n          </p>\n          <div className=\"button-container\">\n            <Button\n              size=\"lg\"\n              aria-label=\"positions-button\"\n              variant=\"primary\"\n              disabled={animate}\n              onClick={select ? this.cancelSelect : this.setSelectState}\n              onMouseUp={this.stopPropagation}\n              onTouchEnd={this.stopPropagation}\n              onMouseDown={this.stopPropagation}\n              onTouchStart={this.stopPropagation}\n            >\n              {this.state.select ? 'Cancel' : 'Select'}\n            </Button>\n            <Button\n              size=\"lg\"\n              disabled={animate}\n              aria-label=\"positions-button\"\n              variant=\"primary\"\n              onClick={select ? this.onDeleteItems : this.onAddItem}\n              onMouseUp={this.stopPropagation}\n              onTouchEnd={this.stopPropagation}\n              onMouseDown={this.stopPropagation}\n              onTouchStart={this.stopPropagation}\n            >\n              {select ? 'Delete' : 'Add'}\n            </Button>\n            <Button\n              size=\"lg\"\n              disabled={select || animate}\n              aria-label=\"positions-button\"\n              variant=\"primary\"\n              onClick={this.loadCurrentPosition}\n              onMouseUp={this.stopPropagation}\n              onTouchEnd={this.stopPropagation}\n              onMouseDown={this.stopPropagation}\n              onTouchStart={this.stopPropagation}\n            >\n              Current Position\n            </Button>\n          </div>\n          {this.renderAccordion()}\n        </div>\n\n        <div className=\"button-container\">\n          <Button\n            size=\"lg\"\n            disabled={select || animate}\n            variant=\"primary\"\n            aria-label=\"First group\"\n            onClick={this.resetPosition}\n            onMouseUp={this.stopPropagation}\n            onTouchEnd={this.stopPropagation}\n            onMouseDown={this.stopPropagation}\n            onTouchStart={this.stopPropagation}\n          >\n            Reset Arm\n          </Button>\n          <Button\n            size=\"lg\"\n            disabled={select || animate}\n            variant=\"primary\"\n            aria-label=\"Second group\"\n            onClick={this.startAnimation}\n            onMouseUp={this.stopPropagation}\n            onTouchEnd={this.stopPropagation}\n            onMouseDown={this.stopPropagation}\n            onTouchStart={this.stopPropagation}\n          >\n            Animate\n          </Button>\n          <Button\n            size=\"lg\"\n            disabled={select || !animate}\n            variant=\"primary\"\n            aria-label=\"Third group\"\n            onClick={this.stopAnimation}\n            onMouseUp={this.stopPropagation}\n            onTouchEnd={this.stopPropagation}\n            onMouseDown={this.stopPropagation}\n            onTouchStart={this.stopPropagation}\n          >\n            Stop\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnimatePanel;\n","export const defaultFontBackground = '#ffffff';\nexport const redColor = '#ff0000';\nexport const greenColor = '#007000';\nexport const blueColor = '#00b0ff';\nexport const defSpriteParams: SpriteParam = {\n  fontsize: 100,\n  fontface: 'Roboto',\n  backgroundColor: defaultFontBackground,\n};\nexport const xParams: SpriteParam = {\n  fontsize: 100,\n  textColor: redColor,\n  borderColor: redColor,\n  backgroundColor: defaultFontBackground,\n};\nexport const yParams: SpriteParam = {\n  fontsize: 100,\n  textColor: greenColor,\n  borderColor: greenColor,\n  backgroundColor: defaultFontBackground,\n};\nexport const zParams: SpriteParam = {\n  fontsize: 100,\n  textColor: blueColor,\n  borderColor: blueColor,\n  backgroundColor: defaultFontBackground,\n};\nexport interface SpriteParam {\n  fontface?: string;\n  fontsize?: number;\n  borderThickness?: number;\n  borderColor?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\nexport interface ThreeModelObjects {\n  scene: THREE.Scene;\n  camera: THREE.PerspectiveCamera;\n  renderer: THREE.WebGLRenderer;\n  joint: THREE.Group[];\n  jointAxisStart: THREE.Object3D[];\n  jointAxisEnd: THREE.Object3D[];\n  origins: THREE.Object3D[];\n  gripper: THREE.Object3D[];\n  gripperPositions: THREE.Object3D[];\n  endEffector: THREE.Mesh;\n  robotBase: THREE.Mesh;\n  labels: THREE.Sprite[];\n  axis: THREE.AxesHelper;\n  lines: THREE.Line[];\n  boundingBox1: THREE.Box3 | null;\n  boundingBox2: THREE.Box3 | null;\n}\nexport interface HUDDisplay {\n  camera: THREE.OrthographicCamera | null;\n  bitMap: CanvasRenderingContext2D;\n  sceneHUD: THREE.Scene;\n  texture: THREE.Texture | null;\n}\nexport const ControlConfig = [\n  {\n    label: 'Joint 1',\n    defaultVal: 0,\n    max: 135,\n    min: -135,\n    valUnit: '\\u00b0',\n  },\n  {\n    label: 'Joint 2',\n    defaultVal: 0,\n    max: 75,\n    min: -75,\n    valUnit: '\\u00b0',\n  },\n  {\n    label: 'Joint 3',\n    defaultVal: 0,\n    max: 135,\n    min: -135,\n    valUnit: '\\u00b0',\n  },\n  {\n    label: 'Joint 4',\n    defaultVal: 0,\n    max: 60,\n    min: -60,\n    valUnit: '\\u00b0',\n  },\n  { label: 'Gripper', defaultVal: 0, max: 100, min: 0, valUnit: '%' },\n];\n","import React from 'react';\nimport '../App.scss';\n\ninterface Props {\n  updateValue(index: number, value: number): void;\n  value: number;\n  index: number;\n  label: string;\n  disabled?: boolean;\n  defaultVal?: number;\n  max?: number;\n  min?: number;\n  valUnit?: string;\n  endEffectorYcor(): number;\n  effectorIntersect(): boolean;\n}\n// Stop propagation to parent div event\nconst stopPropagation = (\n  event:\n    | React.MouseEvent<HTMLInputElement, MouseEvent>\n    | React.TouchEvent<HTMLInputElement>\n    | React.MouseEvent<HTMLDivElement, MouseEvent>\n    | React.TouchEvent<HTMLDivElement>,\n) => {\n  event.stopPropagation();\n};\n\nconst oppositeSigns = (num1: number, num2: number): boolean =>\n  (num1 ^ num2) < 0;\n\nconst handleSliderChange = (\n  props: Props,\n  value: number,\n  setValue: React.Dispatch<React.SetStateAction<number>>,\n  changeDir: number,\n  setChangeDir: React.Dispatch<React.SetStateAction<number>>,\n) => (event: React.ChangeEvent<HTMLInputElement>) => {\n  const ypos = parseFloat(props.endEffectorYcor().toFixed(1));\n  const newValue = parseInt(event.target.value);\n  const intersecting = props.effectorIntersect();\n  if (ypos >= 0.5 && !intersecting) {\n    setValue(newValue);\n    setChangeDir(newValue - value);\n    props.updateValue(props.index, newValue);\n  } else {\n    if (oppositeSigns(newValue - value, changeDir)) {\n      props.updateValue(props.index, newValue);\n    } else if (props.index === 0 && !intersecting)\n      props.updateValue(props.index, newValue);\n  }\n\n  event.stopPropagation();\n  event.preventDefault();\n};\nconst ValueSlider = React.memo((props: Props) => {\n  const [value, setValue] = React.useState(props.value);\n  const [changeDir, setChangeDir] = React.useState(0);\n  const valUnit = props.valUnit ? props.valUnit : '';\n  return (\n    <div className=\"slider-container\">\n      <div className=\"slider-label\">\n        <b>{props.label}</b>\n      </div>\n      <div\n        className=\"sliderDiv\"\n        onMouseDown={stopPropagation}\n        onMouseUp={stopPropagation}\n        onTouchStart={stopPropagation}\n        onTouchEnd={stopPropagation}\n      >\n        <input\n          className=\"slider\"\n          type=\"range\"\n          disabled={props.disabled ? true : false}\n          value={props.value}\n          onChange={handleSliderChange(\n            props,\n            value,\n            setValue,\n            changeDir,\n            setChangeDir,\n          )}\n          min={props.min ? props.min : 0}\n          max={props.max ? props.max : 0}\n          step={1}\n        />\n      </div>\n      <div className=\"slider-value\">\n        <b>{props.value + valUnit}</b>\n      </div>\n    </div>\n  );\n});\nexport default ValueSlider;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../App.scss';\nimport AnimatePanel, { RobotValue } from './AnimatePanel';\nimport { ControlConfig } from './constants';\nimport ValueSlider from './ValueSlider';\ninterface Props {\n  updateConfig(index: number, value: number): void;\n  displayAxis(value: boolean): void;\n  displayLabel(value: boolean): void;\n  resetPosition(): void;\n  receiveRobotValues(): number[];\n  startAnimation(robotValues: RobotValue[]): void;\n  stopAnimation(): void;\n  getEndEffectorYcor(): number;\n  effectorIntersect(): boolean;\n}\ninterface Position {\n  x: number;\n  y: number;\n}\ninterface State {\n  pos: Position;\n  portraitPos: Position;\n  landscapePos: Position;\n  dragging: boolean;\n  rel: Position;\n  backgroundColor: string;\n  width: string | number;\n  height: string | number;\n  overflow: string;\n  showControls: boolean;\n  showAxes: boolean;\n  animation: boolean;\n  showLabels: boolean;\n  robotValues: number[];\n}\ninterface Config {\n  label: string;\n  defaultVal: number;\n  max: number;\n  min: number;\n  valUnit: string;\n}\n\nconst defaultBackground = '#222831da';\nconst backgroundHover = '#222831a0';\n\nclass ModelControls extends React.Component<Props, State> {\n  containerRef: React.RefObject<HTMLDivElement>;\n  longPressTimeout: any;\n  onMobile: boolean;\n  constructor(props: any) {\n    super(props);\n    this.containerRef = React.createRef<HTMLDivElement>();\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent,\n      )\n    ) {\n      this.onMobile = true;\n    } else this.onMobile = false;\n    // Set initial position on controls panel\n    const { innerHeight } = window;\n    this.state = {\n      dragging: false,\n      pos: { x: 0, y: 0 },\n      portraitPos: { x: 0, y: innerHeight * 0.55 },\n      landscapePos: { x: 0, y: 0 },\n      rel: { x: 0, y: 0 },\n      backgroundColor: defaultBackground,\n      width: '35%',\n      height: '100%',\n      overflow: 'auto',\n      showAxes: true,\n      showControls: true,\n      showLabels: true,\n      animation: false,\n      robotValues: [0, 0, 0, 0, 0],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resizeControls, false);\n\n    if (this.onMobile) {\n      this.resizeControls();\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeControls);\n  }\n\n  resizeControls = () => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    if (this.onMobile) {\n      // Update position of the controls div based on orientation\n      this.setState({\n        pos: isPortrait ? this.state.portraitPos : this.state.landscapePos,\n        backgroundColor: defaultBackground,\n        width: isPortrait ? '100%' : '45%',\n        height: isPortrait ? '45%' : '100%',\n      });\n      window.scrollTo(0, 0);\n    } else {\n      if (this.containerRef.current) {\n        // get width of the controls div and left position\n        const { offsetWidth, offsetLeft } = this.containerRef.current;\n        const { innerWidth } = window;\n        const xDelta = innerWidth - offsetWidth;\n\n        // Push the controls div left as window gets smaller\n        this.setState({\n          pos: {\n            x: offsetLeft >= xDelta ? xDelta : offsetLeft,\n            y: 0,\n          },\n          backgroundColor: defaultBackground,\n        });\n      }\n    }\n  };\n  onMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (event.button !== 0) return;\n    const top = event.currentTarget.offsetTop;\n    const left = event.currentTarget.offsetLeft;\n    const { pageX, pageY } = event;\n    const newPosition = {\n      x: pageX - left,\n      y: pageY - top,\n    };\n    event.currentTarget.style.cursor = 'move';\n    this.setState({\n      dragging: true,\n      rel: newPosition,\n      backgroundColor: backgroundHover,\n    });\n    event.stopPropagation();\n  };\n  onMouseUp = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.currentTarget.style.cursor = 'auto';\n    this.setState({ dragging: false, backgroundColor: defaultBackground });\n    event.stopPropagation();\n  };\n  onMouseMove = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!this.state.dragging) return;\n\n    const { innerHeight, innerWidth } = window;\n    const { offsetWidth, offsetHeight } = event.currentTarget;\n\n    let newX = event.pageX - this.state.rel.x;\n    let newY = event.pageY - this.state.rel.y;\n\n    // Check for the div to be within the viewport\n    if (newX < 0) newX = 0;\n    else if (newX > innerWidth - offsetWidth) newX = innerWidth - offsetWidth;\n    if (newY < 0) newY = 0;\n    else if (newY > innerHeight - offsetHeight)\n      newY = innerHeight - offsetHeight;\n\n    // Update the position of the div\n    this.setState({\n      pos: {\n        x: newX,\n        y: newY,\n      },\n    });\n\n    event.stopPropagation();\n  };\n  onMouseLeave = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.currentTarget.style.cursor = 'auto';\n    this.setState({ dragging: false, backgroundColor: defaultBackground });\n    event.stopPropagation();\n  };\n  onTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\n    const top = event.currentTarget.offsetTop;\n    const left = event.currentTarget.offsetLeft;\n    const { pageX, pageY } = event.touches[0];\n    this.longPressTimeout = setTimeout(() => {\n      this.setState({\n        dragging: true,\n        rel: {\n          x: pageX - left,\n          y: pageY - top,\n        },\n        backgroundColor: backgroundHover,\n        overflow: 'hidden',\n      });\n    }, 300);\n    event.stopPropagation();\n  };\n  onTouchEnd = (event: React.TouchEvent<HTMLDivElement>) => {\n    const isPortrait = window.matchMedia('(orientation: portrait)').matches;\n    if (isPortrait) {\n      this.setState({\n        dragging: false,\n        backgroundColor: defaultBackground,\n        portraitPos: this.state.pos,\n        overflow: 'auto',\n      });\n    } else {\n      this.setState({\n        dragging: false,\n        backgroundColor: defaultBackground,\n        landscapePos: this.state.pos,\n        overflow: 'auto',\n      });\n    }\n\n    event.stopPropagation();\n  };\n  onTouchMove = (event: React.TouchEvent<HTMLDivElement>) => {\n    if (!this.state.dragging) {\n      clearTimeout(this.longPressTimeout);\n      return;\n    }\n    const { pageX, pageY } = event.touches[0];\n    const { innerHeight, innerWidth } = window;\n    const { offsetWidth, offsetHeight } = event.currentTarget;\n\n    let newX = pageX - this.state.rel.x;\n    let newY = pageY - this.state.rel.y;\n    if (newX < 0) newX = 0;\n    else if (newX > innerWidth - offsetWidth) newX = innerWidth - offsetWidth;\n    if (newY < 0) newY = 0;\n    else if (newY > innerHeight - offsetHeight)\n      newY = innerHeight - offsetHeight;\n    this.setState({\n      pos: {\n        x: newX,\n        y: newY,\n      },\n    });\n    event.stopPropagation();\n  };\n  onControlsButton = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    this.setState({ showControls: !this.state.showControls });\n    event.currentTarget.blur();\n    event.stopPropagation();\n    event.preventDefault();\n  };\n  onAxesButton = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.currentTarget.blur();\n    const axes = !this.state.showAxes;\n    this.props.displayAxis(axes);\n    this.setState({ showAxes: axes });\n    event.stopPropagation();\n  };\n  onClickLabel = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.currentTarget.blur();\n    const label = !this.state.showLabels;\n    this.setState({ showLabels: label });\n    this.props.displayLabel(label);\n    event.stopPropagation();\n  };\n  startAnimation = (robotValues: RobotValue[]) => {\n    this.props.startAnimation(robotValues);\n    this.setState({ animation: true });\n  };\n  stopAnimation = () => {\n    this.setState({ animation: false });\n    this.props.stopAnimation();\n  };\n  showControls = (\n    event:\n      | React.TouchEvent<HTMLDivElement>\n      | React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    this.setState({\n      showControls: true,\n      backgroundColor: defaultBackground,\n    });\n    event.stopPropagation();\n  };\n  // written to prevent event propagatiion\n  stopPropagation = (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.TouchEvent<HTMLButtonElement>,\n  ) => {\n    event.stopPropagation();\n  };\n  pressShowControls = (event: React.TouchEvent<HTMLDivElement>) => {\n    console.log('button event start');\n    this.setState({ backgroundColor: backgroundHover });\n    event.stopPropagation();\n  };\n  updateArmConfig = (index: number, value: number): void => {\n    const config = this.state.robotValues.slice();\n    config[index] = value;\n    this.setState({ robotValues: config });\n    this.props.updateConfig(index, value);\n  };\n  renderSlider = (config: Config, index: number) => (\n    <ValueSlider\n      disabled={this.state.animation}\n      value={this.state.robotValues[index]}\n      key={index}\n      {...config}\n      updateValue={this.updateArmConfig}\n      index={index}\n      endEffectorYcor={this.props.getEndEffectorYcor}\n      effectorIntersect={this.props.effectorIntersect}\n    />\n  );\n  resetPosition = () => {\n    this.props.resetPosition();\n    this.setState({ robotValues: [0, 0, 0, 0, 0] });\n  };\n  render() {\n    return (\n      <div>\n        <div\n          ref={this.containerRef}\n          className=\"controls disable-selection\"\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          onMouseUp={this.onMouseUp}\n          onMouseLeave={this.onMouseLeave}\n          onTouchStart={this.onTouchStart}\n          onTouchMove={this.onTouchMove}\n          onTouchEnd={this.onTouchEnd}\n          unselectable=\"on\"\n          style={{\n            left: this.state.pos.x + 'px',\n            top: this.state.pos.y + 'px',\n            width: this.state.width,\n            height: this.state.height,\n            backgroundColor: this.state.backgroundColor,\n            minWidth: this.onMobile ? undefined : 400,\n            overflow: this.state.overflow,\n            display: this.state.showControls ? 'block' : 'none',\n          }}\n        >\n          <h1>OWI Robot Arm: Controls</h1>\n          <p id=\"text\">\n            Use the sliders move the associated robot arm joints. Click, touch,\n            drag or scroll on the model screen to transform the display. Press\n            and hold to drag the panel.\n          </p>\n          {ControlConfig.map(this.renderSlider)}\n          <div className=\"button-container\">\n            <Button\n              size=\"lg\"\n              disabled={this.state.animation}\n              variant=\"primary\"\n              aria-label=\"First group\"\n              onClick={this.onControlsButton}\n              onMouseUp={this.stopPropagation}\n              onTouchEnd={this.stopPropagation}\n              onMouseDown={this.stopPropagation}\n              onTouchStart={this.stopPropagation}\n            >\n              Hide Controls\n            </Button>\n\n            <Button\n              size=\"lg\"\n              variant=\"primary\"\n              disabled={this.state.animation}\n              aria-label=\"Second group\"\n              onClick={this.onAxesButton}\n              onMouseDown={this.stopPropagation}\n              onTouchStart={this.stopPropagation}\n              onMouseUp={this.stopPropagation}\n              onTouchEnd={this.stopPropagation}\n            >\n              {this.state.showAxes ? 'Hide Axes' : 'Show Axes'}\n            </Button>\n\n            <Button\n              size=\"lg\"\n              disabled={this.state.animation}\n              variant=\"primary\"\n              aria-label=\"Third group\"\n              onClick={this.onClickLabel}\n              onMouseDown={this.stopPropagation}\n              onMouseUp={this.stopPropagation}\n              onTouchStart={this.stopPropagation}\n              onTouchEnd={this.stopPropagation}\n            >\n              {this.state.showLabels ? 'Hide Labels' : 'Show Labels'}\n            </Button>\n          </div>\n          <AnimatePanel\n            resetPosition={this.resetPosition}\n            receiveRobotValues={this.props.receiveRobotValues}\n            startAnimation={this.startAnimation}\n            stopAnimation={this.stopAnimation}\n            animate={this.state.animation}\n          />\n        </div>\n        <div\n          className={'show-controls disable-selection'}\n          style={{\n            display: this.state.showControls ? 'none' : 'block',\n            backgroundColor: this.state.backgroundColor,\n          }}\n          onClick={this.showControls}\n          onTouchEnd={this.showControls}\n          onTouchStart={this.pressShowControls}\n        >\n          <h4>Show Controls</h4>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ModelControls;\n","import * as THREE from 'three';\nimport FONT from 'three/examples/fonts/helvetiker_regular.typeface.json';\nimport {\n  defSpriteParams,\n  SpriteParam,\n  ThreeModelObjects,\n  xParams,\n  yParams,\n  zParams,\n} from './constants';\nimport { blackMat, yMat } from './ThreeContainer';\n\nconst createCylinder = (radius: number, height: number) => {\n  return new THREE.CylinderGeometry(radius, radius, height, 30);\n};\nexport const createBox = (width: number, height: number, depth: number) => {\n  return new THREE.BoxGeometry(width, height, depth);\n};\nconst roundRect = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  r: number,\n) => {\n  ctx.beginPath();\n  ctx.moveTo(x + r, y);\n  ctx.lineTo(x + w + 30 - r, y);\n  ctx.quadraticCurveTo(x + w + 30, y, x + w + 30, y + r);\n  ctx.lineTo(x + w + 30, y + h - r);\n  ctx.quadraticCurveTo(x + w + 30, y + h, x + w + 30 - r, y + h);\n  ctx.lineTo(x + r, y + h);\n  ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n  ctx.lineTo(x, y + r);\n  ctx.quadraticCurveTo(x, y, x + r, y);\n  ctx.closePath();\n  ctx.fill();\n  ctx.stroke();\n};\nconst makeTextSprite = (\n  message: string,\n  params: SpriteParam,\n  x: number,\n  y: number,\n  z: number,\n): THREE.Sprite => {\n  const fontface = params.fontface ? params.fontface : 'Arial';\n  const fontsize = params.fontsize ? params.fontsize : 18;\n  const borderThickness = params.borderThickness ? params.borderThickness : 4;\n  const borderColor = params.borderColor ? params.borderColor : '#000000';\n  const backgroundColor = params.backgroundColor\n    ? params.backgroundColor\n    : '#ffffff00';\n  const textColor = params.textColor ? params.textColor : '#000000';\n\n  const canvas = document.createElement('canvas');\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const context = canvas.getContext('2d')!;\n  canvas.width = 400;\n  canvas.height = 200;\n  context.font = 'Bold ' + fontsize + 'px ' + fontface;\n  const metrics = context.measureText(message);\n  const textWidth = metrics.width;\n\n  context.fillStyle = backgroundColor;\n  context.strokeStyle = borderColor;\n\n  context.lineWidth = borderThickness;\n  roundRect(\n    context,\n    borderThickness / 2,\n    borderThickness / 2,\n    textWidth + borderThickness,\n    fontsize * 1.4 + borderThickness,\n    20,\n  );\n\n  context.fillStyle = textColor;\n\n  context.fillText(message, borderThickness + 15, fontsize + borderThickness);\n\n  const texture = new THREE.Texture(canvas);\n  texture.minFilter = THREE.LinearFilter;\n  texture.needsUpdate = true;\n\n  const spriteMaterial = new THREE.SpriteMaterial({\n    map: texture,\n    premultipliedAlpha: true,\n    dithering: false,\n    transparent: true,\n  });\n  spriteMaterial.precision = 'highp';\n  spriteMaterial.depthWrite = false;\n  const sprite = new THREE.Sprite(spriteMaterial);\n  sprite.scale.set(8, 4, 1.0);\n  sprite.center.set(0.1, 0.65);\n\n  sprite.position.set(x, y, z);\n  return sprite;\n};\n\nexport const constructJoint1 = (object: ThreeModelObjects) => {\n  // Constructor Robot Arm base\n  const base = new THREE.Group();\n  const baseCylinder = [];\n  baseCylinder.push(new THREE.Mesh(createCylinder(4, 1), blackMat));\n  baseCylinder[0].position.set(0, 0.5, 0);\n  baseCylinder.push(new THREE.Mesh(createCylinder(4, 2), yMat));\n  baseCylinder[1].position.set(0, 2, 0);\n  baseCylinder.push(new THREE.Mesh(createCylinder(4, 1), blackMat));\n  baseCylinder[2].position.set(0, 3.5, 0);\n  baseCylinder.forEach((cylinder) => base.add(cylinder));\n\n  const baseBox = [];\n  baseBox.push(new THREE.Mesh(createBox(12, 4, 6), blackMat));\n  baseBox[0].position.set(6, 2, 0);\n  baseBox.push(new THREE.Mesh(createBox(6, 0.5, 4), yMat));\n  baseBox[1].position.set(8, 4.25, 0);\n  base.add(baseBox[0]);\n  base.add(baseBox[1]);\n  object.scene.add(base);\n  base.rotateY(Math.PI / 2);\n  object.joint[0].rotateY(Math.PI / 2);\n  // Construct joint[0]\n  const joint2Base = new THREE.Mesh(createBox(3, 3, 3), yMat);\n  joint2Base.position.set(0, 5.5, 0);\n  object.joint[0].add(joint2Base);\n\n  const jointCylinder = [];\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 0.5), blackMat));\n  jointCylinder[0].rotateX(Math.PI / 2);\n  jointCylinder[0].position.set(0, 5.5, -1.75);\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 0.5), blackMat));\n  jointCylinder[1].rotateX(Math.PI / 2);\n  jointCylinder[1].position.set(0, 5.5, 1.75);\n\n  object.joint[0].add(jointCylinder[0]);\n  object.joint[0].add(jointCylinder[1]);\n  object.robotBase.position.set(0, 2, -4);\n  object.scene.add(object.robotBase);\n};\nexport const constructJoint2 = (object: ThreeModelObjects) => {\n  const joint2Bar = [];\n  const jointCylinder = [];\n  joint2Bar.push(new THREE.Mesh(createBox(1.5, 8, 0.5), blackMat));\n  joint2Bar[0].position.set(0, 9.5, -1.75);\n  joint2Bar.push(new THREE.Mesh(createBox(1.5, 8, 0.5), blackMat));\n  joint2Bar[1].position.set(0, 9.5, 1.75);\n  joint2Bar.forEach((value) => object.joint[1].add(value));\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 0.5), blackMat));\n  jointCylinder[0].rotateX(Math.PI / 2);\n  jointCylinder[0].position.set(0, 13.5, 1.75);\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 0.5), blackMat));\n  jointCylinder[1].rotateX(Math.PI / 2);\n  jointCylinder[1].position.set(0, 13.5, -1.75);\n  object.joint[1].add(jointCylinder[0]);\n  object.joint[1].add(jointCylinder[1]);\n\n  // Position the first join axis objects to joint[1]\n  object.jointAxisStart[0].position.set(0, 5.5, -5);\n  object.jointAxisEnd[0].position.set(0, 5.5, 5);\n  object.origins[0].position.set(0, 5.5, 0);\n  object.joint[1].add(object.jointAxisStart[0]);\n  object.joint[1].add(object.jointAxisEnd[0]);\n  object.joint[1].add(object.origins[0]);\n};\nexport const constructJoint3 = (object: ThreeModelObjects) => {\n  const armBody = new THREE.Mesh(createBox(3, 8, 3), yMat);\n  armBody.position.set(0, 16, 0);\n  object.joint[2].add(armBody);\n\n  const armBodyCover = [];\n  armBodyCover.push(new THREE.Mesh(createBox(0.25, 6, 2.5), blackMat));\n  armBodyCover[0].position.set(-1.625, 16, 0);\n  object.joint[2].add(armBodyCover[0]);\n  armBodyCover.push(new THREE.Mesh(createBox(0.25, 6, 2.5), blackMat));\n  armBodyCover[1].position.set(1.625, 16, 0);\n  object.joint[2].add(armBodyCover[1]);\n\n  const jointCylinder = [];\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 0.5), blackMat));\n  jointCylinder[0].rotateX(Math.PI / 2);\n  jointCylinder[0].position.set(0, 18.5, 1.75);\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 0.5), blackMat));\n  jointCylinder[1].rotateX(Math.PI / 2);\n  jointCylinder[1].position.set(0, 18.5, -1.75);\n  object.joint[2].add(jointCylinder[0]);\n  object.joint[2].add(jointCylinder[1]);\n\n  // Position the second join axis objects to joint[2]\n  object.jointAxisStart[1].position.set(0, 13.5, -5);\n  object.jointAxisEnd[1].position.set(0, 13.5, 5);\n  object.origins[1].position.set(0, 13.5, 0);\n  object.joint[2].add(object.jointAxisStart[1]);\n  object.joint[2].add(object.jointAxisEnd[1]);\n  object.joint[2].add(object.origins[1]);\n};\nexport const constructJoint4 = (object: ThreeModelObjects) => {\n  const jointCylinder = [];\n  jointCylinder.push(new THREE.Mesh(createCylinder(1.25, 3), blackMat));\n  jointCylinder[0].rotateX(Math.PI / 2);\n  jointCylinder[0].position.set(0, 21.5, 0);\n  object.joint[3].add(jointCylinder[0]);\n\n  const baseBox = [];\n  baseBox.push(new THREE.Mesh(createBox(2.5, 2.5, 0.5), blackMat));\n  baseBox[0].position.set(0, 21.5, -1.75);\n  baseBox.push(new THREE.Mesh(createBox(2.5, 2.5, 0.5), blackMat));\n  baseBox[1].position.set(0, 21.5, 1.75);\n  baseBox.push(new THREE.Mesh(createBox(2.5, 0.5, 3), blackMat));\n  baseBox[2].position.set(0, 23, 0);\n  object.joint[3].add(baseBox[0]);\n  object.joint[3].add(baseBox[1]);\n  object.joint[3].add(baseBox[2]);\n\n  // Position the third join axis objects to joint[3]\n  object.jointAxisStart[2].position.set(0, 18.5, -5);\n  object.jointAxisEnd[2].position.set(0, 18.5, 5);\n  object.origins[2].position.set(0, 18.5, 0);\n  object.joint[3].add(object.jointAxisStart[2]);\n  object.joint[3].add(object.jointAxisEnd[2]);\n  object.joint[3].add(object.origins[2]);\n};\nexport const constructGripper = (object: ThreeModelObjects) => {\n  object.gripper.push(new THREE.Mesh(createBox(0.7, 6, 0.7), blackMat));\n  object.gripper[0].position.set(0, 23.5, -0.7);\n  object.gripper.push(new THREE.Mesh(createBox(0.7, 6, 0.7), blackMat));\n  object.gripper[1].position.set(0, 23.5, 0.7);\n\n  object.gripper.forEach((value) => object.joint[3].add(value));\n  object.gripperPositions[0].position.set(0, 23.5, -0.15);\n  object.gripperPositions[1].position.set(0, 23.5, -0.7);\n  object.gripperPositions[2].position.set(0, 23.5, 0.15);\n  object.gripperPositions[3].position.set(0, 23.5, 0.7);\n  object.endEffector.position.set(0, 26.5, 0);\n  object.joint[3].add(object.endEffector);\n  object.gripperPositions.forEach((value) => object.joint[3].add(value));\n};\nexport const createLabels = (object: ThreeModelObjects) => {\n  // Create joint labels\n  object.labels.push(makeTextSprite('Joint 1', defSpriteParams, -10.5, 1.5, 0));\n  object.scene.add(object.labels[0]);\n  object.labels.push(makeTextSprite('Joint 2', defSpriteParams, 0, 5.5, 10.5));\n  object.labels[1].rotateY(-Math.PI / 2);\n  object.joint[0].add(object.labels[1]);\n  object.labels.push(makeTextSprite('Joint 3', defSpriteParams, 0, 13.5, 10.5));\n  object.joint[1].add(object.labels[2]);\n  object.labels.push(makeTextSprite('Joint 4', defSpriteParams, 0, 18.5, 10.5));\n  object.joint[2].add(object.labels[3]);\n  object.labels.push(makeTextSprite('Gripper', defSpriteParams, 0, 23.5, 8.5));\n  object.joint[3].add(object.labels[4]);\n  object.labels.push(makeTextSprite('x', xParams, 30, 0, 0));\n  object.labels.push(makeTextSprite('y', yParams, 0, 30, 0));\n  object.labels.push(makeTextSprite('z', zParams, 0, 0, 30));\n\n  object.scene.add(object.labels[5]);\n  object.scene.add(object.labels[6]);\n  object.scene.add(object.labels[7]);\n\n  // Create Lines\n  const points = [];\n  points.push(new THREE.Vector3(0, 5.5, 0));\n  points.push(new THREE.Vector3(0, 5.5, 9.75));\n  object.lines.push(\n    new THREE.Line(\n      new THREE.BufferGeometry().setFromPoints(points),\n      new THREE.LineBasicMaterial({ color: 0x3b3b3b }),\n    ),\n  );\n  object.joint[1].add(object.lines[0]);\n\n  points.push(new THREE.Vector3(0, 18.5, 0));\n  points.push(new THREE.Vector3(0, 18.5, 9.75));\n  object.lines.push(\n    new THREE.Line(\n      new THREE.BufferGeometry().setFromPoints([points[2], points[3]]),\n      new THREE.LineBasicMaterial({ color: 0x3b3b3b }),\n    ),\n  );\n  object.joint[2].add(object.lines[1]);\n\n  points.push(new THREE.Vector3(0, 13.5, 0));\n  points.push(new THREE.Vector3(0, 13.5, 9.75));\n  object.lines.push(\n    new THREE.Line(\n      new THREE.BufferGeometry().setFromPoints([points[4], points[5]]),\n      new THREE.LineBasicMaterial({ color: 0x3b3b3b }),\n    ),\n  );\n  object.joint[2].add(object.lines[2]);\n  points.push(new THREE.Vector3(0, 22.5, 0));\n  points.push(new THREE.Vector3(0, 22.5, 7.95));\n  object.lines.push(\n    new THREE.Line(\n      new THREE.BufferGeometry().setFromPoints([points[6], points[7]]),\n      new THREE.LineBasicMaterial({ color: 0x3b3b3b }),\n    ),\n  );\n  object.joint[3].add(object.lines[3]);\n};\nexport const createDisplay = (object: ThreeModelObjects): void => {\n  object.scene.add(object.axis);\n\n  // Add a grid on the xz plane\n  const gridhelper = new THREE.GridHelper(60, 60);\n  object.scene.add(gridhelper);\n\n  // Set camera\n  object.camera?.position.set(0, 33, 40);\n  object.camera?.lookAt(object.scene.position);\n};\nexport const addText = (\n  message: string,\n  x: number,\n  y: number,\n  z: number,\n  size: number,\n  color: number,\n) => {\n  const loader = new THREE.FontLoader();\n  const font = loader.parse(FONT);\n\n  const matDark = new THREE.LineBasicMaterial({\n    color: color,\n    side: THREE.DoubleSide,\n  });\n\n  const shapes = font.generateShapes(message, size);\n\n  const geometry = new THREE.ShapeBufferGeometry(shapes);\n\n  const vec = new THREE.Vector3();\n\n  const text = new THREE.Mesh(geometry, matDark);\n  text.geometry.computeBoundingBox();\n  text.geometry.boundingBox?.getCenter(vec);\n  text.geometry.center();\n  text.position.copy(vec);\n  text.position.set(x, y, z);\n  return text;\n};\n","import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport '../App.scss';\nimport { RobotValue } from './AnimatePanel';\nimport { ThreeModelObjects } from './constants';\nimport ModelControls from './ModelControls';\nimport {\n  constructGripper,\n  constructJoint1,\n  constructJoint2,\n  constructJoint3,\n  constructJoint4,\n  createBox,\n  createDisplay,\n  createLabels,\n} from './ModelGeneratorFunctions';\ninterface Props {\n  active?: boolean;\n}\ninterface State {\n  robotValues: number[];\n  positionSeq: RobotValue[];\n  showAxis: boolean;\n  showLabels: boolean;\n  animation: boolean;\n}\nconst transparentMat = new THREE.MeshBasicMaterial({\n  color: 0xffffff,\n  transparent: true,\n  opacity: 0,\n});\nconst frames = 100;\nexport const yMat = new THREE.MeshStandardMaterial({ color: 0xffdf20 });\nexport const blackMat = new THREE.MeshStandardMaterial({ color: 0x000000 });\n\nexport default class ThreeContainer extends Component<Props, State> {\n  threeRootElement = React.createRef<HTMLDivElement>();\n  canvasRef = React.createRef<HTMLCanvasElement>();\n  canvasCtx: CanvasRenderingContext2D | null;\n  plane: THREE.Mesh | null;\n  frameId = 0;\n  light = new THREE.PointLight(0xffffff);\n  prevState: State = {\n    robotValues: [0, 0, 0, 0, 0],\n    showAxis: true,\n    showLabels: true,\n    animation: false,\n    positionSeq: [],\n  };\n  rotateFuncs: any[];\n  handles: ThreeModelObjects = {\n    scene: new THREE.Scene(),\n    camera: new THREE.PerspectiveCamera(75, 1, 0.1, 1000),\n    renderer: new THREE.WebGLRenderer({\n      antialias: true,\n    }),\n    joint: [],\n    jointAxisStart: [],\n    jointAxisEnd: [],\n    origins: [],\n    gripper: [],\n    gripperPositions: [],\n    endEffector: new THREE.Mesh(createBox(0.5, 0.5, 0.5), transparentMat),\n    robotBase: new THREE.Mesh(createBox(8, 5, 16), transparentMat),\n    labels: [],\n    axis: new THREE.AxesHelper(30),\n    boundingBox1: null,\n    boundingBox2: null,\n    lines: [],\n  };\n  controls = new OrbitControls(\n    this.handles.camera,\n    this.handles.renderer.domElement,\n  );\n  worldPos = new THREE.Vector3();\n  crtIndex = 0;\n  nextIndex = 0;\n  angleDelta = [0, 0, 0, 0, 0];\n  newPosition = [0, 0, 0, 0, 0];\n  frameCount = 0;\n\n  constructor(props: any) {\n    super(props);\n    this.state = this.prevState;\n    this.plane = null;\n    //Set the lightsource\n    this.light.position.set(-5, 5, 5);\n    this.handles.scene.add(this.light);\n    this.handles.renderer.setPixelRatio(window.devicePixelRatio);\n    this.canvasCtx = null;\n    this.controls.update();\n    // Use the join axis arrays to calculate the rotation axis for joints\n    this.rotateFuncs = [\n      this.rotateJoint1,\n      this.rotateJoint2,\n      this.rotateJoint3,\n      this.rotateJoint4,\n      this.updateGripper,\n    ];\n    for (let i = 0; i < 4; i++) {\n      this.handles.joint.push(new THREE.Group());\n      this.handles.gripperPositions.push(new THREE.Object3D());\n      if (i < 3) {\n        this.handles.jointAxisStart.push(new THREE.Object3D());\n        this.handles.jointAxisEnd.push(new THREE.Object3D());\n        this.handles.origins.push(new THREE.Object3D());\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.threeRootElement.current) {\n      this.threeRootElement.current.appendChild(\n        this.handles.renderer.domElement,\n      );\n      const { clientHeight, clientWidth } = this.threeRootElement.current;\n      this.handles.renderer.setClearColor(0xd6d6d6, 1);\n      this.handles.renderer.setSize(clientWidth, clientHeight);\n      this.handles.camera.aspect = clientWidth / clientHeight;\n      this.handles.camera.updateProjectionMatrix();\n    }\n    this.canvasCtx = this.canvasRef.current?.getContext(\n      '2d',\n    ) as CanvasRenderingContext2D;\n\n    // Add the groups to the scene\n    this.handles.joint[2].add(this.handles.joint[3]);\n    this.handles.joint[1].add(this.handles.joint[2]);\n    this.handles.joint[0].add(this.handles.joint[1]);\n    this.handles.scene.add(this.handles.joint[0]);\n\n    constructJoint1(this.handles);\n    constructJoint2(this.handles);\n    constructJoint3(this.handles);\n    constructJoint4(this.handles);\n    constructGripper(this.handles);\n    createLabels(this.handles);\n    createDisplay(this.handles);\n    this.createBoundingBoxes();\n    window.addEventListener('resize', this.onSizeChange, false);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onSizeChange);\n  }\n  drawCoordinates = (text: string, x: number, y: number) => {\n    if (this.canvasCtx) {\n      this.canvasCtx.font = 'Bold 25px Roboto';\n      this.canvasCtx.fillStyle = 'rgba(0,0,0,1)';\n      this.canvasCtx.fillText(text, x, y);\n    }\n  };\n  createBoundingBoxes = () => {\n    this.handles.endEffector.geometry.computeBoundingBox();\n    this.handles.robotBase.geometry.computeBoundingBox();\n    this.handles.boundingBox1 = new THREE.Box3();\n    this.handles.boundingBox2 = new THREE.Box3();\n    this.handles.boundingBox1?.setFromObject(this.handles.robotBase);\n    this.handles.boundingBox2?.setFromObject(this.handles.endEffector);\n  };\n  endEffectorIntersect = (): boolean => {\n    return this.handles.boundingBox1?.containsPoint(\n      this.endEffectorCoordinates(),\n    ) as boolean;\n  };\n  // Canvas does not need to re-render. Only need to receive data on\n  // Componentdidreceiveprops to update model with its renderTHREE() loop.\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    this.rotateFuncs.forEach((rotate, index) => {\n      if (nextState.robotValues[index] !== this.prevState.robotValues[index]) {\n        rotate(nextState.robotValues[index], this.prevState.robotValues[index]);\n        this.prevState.robotValues[index] = nextState.robotValues[index];\n      }\n    });\n    if (nextState.showAxis !== this.prevState.showAxis) {\n      this.updateAxesVisibility(nextState.showAxis);\n      this.prevState.showAxis = nextState.showAxis;\n    }\n    if (nextState.showLabels !== this.prevState.showLabels) {\n      this.displayLabelVisibility(nextState.showLabels);\n      this.prevState.showLabels = nextState.showLabels;\n    }\n    return false;\n  }\n\n  updateArmConfig = (index: number, value: number): void => {\n    const config = this.state.robotValues.slice();\n    config[index] = value;\n    this.setState({ robotValues: config });\n  };\n  displayAxis = (value: boolean): void => {\n    this.setState({ showAxis: value });\n  };\n  displayLabel = (value: boolean): void => {\n    this.setState({ showLabels: value });\n  };\n  startAnimation = (robotValues: RobotValue[]) => {\n    if (robotValues.length !== 0) {\n      this.newPosition = [...robotValues[0].values];\n      this.angleDelta = [0, 0, 0, 0, 0];\n      this.crtIndex = 0;\n      this.nextIndex = 1;\n      this.setState({\n        animation: true,\n        positionSeq: [...robotValues],\n        robotValues: [...robotValues[0].values],\n      });\n    }\n  };\n  stopAnimation = () => {\n    this.setState({ animation: false });\n    this.resetPosition();\n  };\n  onSizeChange = () => {\n    if (this.threeRootElement.current) {\n      const { clientWidth, clientHeight } = this.threeRootElement.current;\n      this.handles.renderer.setSize(clientWidth, clientHeight, true);\n      this.handles.camera.aspect = clientWidth / clientHeight;\n      this.handles.camera.updateProjectionMatrix();\n    }\n  };\n  sendRobotValues = () => {\n    return this.state.robotValues;\n  };\n  rotateJoint1 = (newAngle: number, prevAngle: number) => {\n    const angle = this.rad(newAngle - prevAngle);\n    this.handles.joint[0].rotateY(angle);\n  };\n  rotateJoint2 = (newAngle: number, prevAngle: number) => {\n    const angle = this.rad(newAngle - prevAngle);\n    const axis = this.handles.jointAxisStart[0].position\n      .clone()\n      .sub(this.handles.jointAxisEnd[0].position);\n    const point = this.handles.origins[0].position;\n    this.rotate(this.handles.joint[1], point, axis, angle);\n  };\n\n  rotateJoint3 = (newAngle: number, prevAngle: number) => {\n    const angle = this.rad(newAngle - prevAngle);\n    const axis = this.handles.jointAxisStart[1].position\n      .clone()\n      .sub(this.handles.jointAxisEnd[1].position);\n    const point = this.handles.origins[1].position;\n    this.rotate(this.handles.joint[2], point, axis, angle);\n  };\n  rotateJoint4 = (newAngle: number, prevAngle: number) => {\n    const angle = this.rad(newAngle - prevAngle);\n    const axis = this.handles.jointAxisStart[2].position\n      .clone()\n      .sub(this.handles.jointAxisEnd[2].position);\n    const point = this.handles.origins[2].position;\n    this.rotate(this.handles.joint[3], point, axis, angle);\n  };\n  updateGripper = (newValue: number, prevValue?: number) => {\n    const leftDelta = this.handles.gripperPositions[1].position\n      .clone()\n      .sub(this.handles.gripperPositions[0].position);\n    const rightDelta = this.handles.gripperPositions[3].position\n      .clone()\n      .sub(this.handles.gripperPositions[2].position);\n    this.handles.gripper[0].position.copy(\n      leftDelta\n        .multiplyScalar((newValue - 50) / 100)\n        .add(this.handles.gripperPositions[1].position),\n    );\n    this.handles.gripper[1].position.copy(\n      rightDelta\n        .multiplyScalar((newValue - 50) / 100)\n        .add(this.handles.gripperPositions[3].position),\n    );\n  };\n\n  rad = (angle: number): number => (angle * Math.PI) / 180;\n\n  rotate = (\n    obj: THREE.Object3D,\n    point: THREE.Vector3,\n    axis: THREE.Vector3,\n    theta: number,\n  ) => {\n    const normalAxis = axis.normalize();\n    obj.position.sub(point); // remove the offset\n    obj.position.applyAxisAngle(normalAxis, theta); // rotate the POSITION\n    obj.position.add(point); // re-add the offset\n    obj.rotateOnAxis(normalAxis, theta); // rotate the OBJECT\n  };\n  updateAxesVisibility = (value: boolean) => {\n    this.handles.axis.visible = value;\n    for (let i = 5; i < 8; i++) {\n      this.handles.labels[i].visible = value;\n    }\n  };\n  displayLabelVisibility = (value: boolean) => {\n    for (let i = 0; i < 5; i++) {\n      this.handles.labels[i].visible = value;\n    }\n    this.handles.lines.forEach((line) => (line.visible = value));\n  };\n  resetPosition = () => {\n    this.setState({ robotValues: [0, 0, 0, 0, 0] });\n  };\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.renderTHREE);\n    }\n  };\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n  getEndEffectorYcor = () => {\n    this.handles.endEffector.getWorldPosition(this.worldPos);\n    return this.worldPos.y;\n  };\n  endEffectorCoordinates = () => {\n    this.handles.endEffector.getWorldPosition(this.worldPos);\n    return this.worldPos.clone();\n  };\n  drawEffectCoordinates = () => {\n    this.handles.endEffector.getWorldPosition(this.worldPos);\n    const { x, y, z } = this.worldPos;\n    this.renderCoordinates(x.toFixed(1), y.toFixed(1), z.toFixed(1));\n  };\n  updateView = () => {\n    this.controls.update();\n    this.light.position.copy(this.handles.camera.position);\n    this.handles.renderer.render(this.handles.scene, this.handles.camera);\n  };\n  renderTHREE = () => {\n    this.updateView();\n    this.drawEffectCoordinates();\n    if (this.state.animation) {\n      this.drawPositions();\n    }\n\n    this.frameId = requestAnimationFrame(this.renderTHREE);\n  };\n  drawPositions = () => {\n    const { length } = this.state.positionSeq;\n    const positions = this.state.positionSeq;\n    if (length === 0) return;\n    else if (length === 1) {\n      // Set the arm to the position\n      this.setState({\n        robotValues: positions[0].values.slice(),\n      });\n    } else {\n      // Update the current arm position index\n      if (this.frameCount === frames) {\n        this.crtIndex++;\n        this.frameCount = 0;\n        if (this.crtIndex >= length) this.crtIndex = 0;\n        this.nextIndex = this.crtIndex + 1;\n        if (this.crtIndex === length - 1) this.nextIndex = 0;\n        this.newPosition = [...positions[this.crtIndex].values];\n      }\n      // Set the angle change per position\n      if (this.frameCount !== frames) {\n        // set new position\n        if (this.frameCount === 0) {\n          this.angleDelta = this.angleDelta.map((value, index) => {\n            return (value =\n              (positions[this.nextIndex].values[index] -\n                positions[this.crtIndex].values[index]) /\n              frames);\n          });\n        }\n        this.frameCount++;\n        this.newPosition = this.newPosition.map((value, index) => {\n          return value + this.angleDelta[index];\n        });\n\n        this.setState({ robotValues: [...this.newPosition] });\n      }\n    }\n  };\n\n  renderCoordinates = (x: string, y: string, z: string) => {\n    const { width, height } = this.canvasCtx?.canvas as HTMLCanvasElement;\n    this.canvasCtx?.clearRect(0, 0, width, height);\n    this.drawCoordinates(`End Effector: `, 80, 30);\n    this.drawCoordinates(`( ${x}, ${y}, ${z} )`, 80, 60);\n  };\n\n  render() {\n    console.log('rendering three js');\n    return (\n      <div ref={this.threeRootElement} className=\"threeCanvas\">\n        <ModelControls\n          resetPosition={this.resetPosition}\n          updateConfig={this.updateArmConfig}\n          displayAxis={this.displayAxis}\n          displayLabel={this.displayLabel}\n          receiveRobotValues={this.sendRobotValues}\n          startAnimation={this.startAnimation}\n          stopAnimation={this.stopAnimation}\n          getEndEffectorYcor={this.getEndEffectorYcor}\n          effectorIntersect={this.endEffectorIntersect}\n        />\n        <canvas className=\"coordinate-canvas\" ref={this.canvasRef} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport ThreeContainer from './components/ThreeContainer';\n\nclass App extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <div className=\"page\">\n        <ThreeContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\ndocument.body.style.overflow = 'hidden';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}